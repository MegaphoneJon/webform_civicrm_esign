<?php

function webform_civicrm_esign_civicrm_post($op, $name, $id, $dao) {
  global $values;

  switch ($name) {
    case 'Case':
      $values['case_id'] = $id;
      break;
    case 'Activity':
      $values['activity_id'][$dao->activity_type_id] = $id;
      break;
  }
}

/**
 * implementation of hook_webform_submission_insert
 * @param $node
 * @param $submission
 *
 * @throws \CiviCRM_API3_Exception
 */
function webform_civicrm_esign_webform_submission_insert($node, $submission) {
  civicrm_initialize();
  global $values;

  if (!$node->type == 'webform') {
    return;
  }

  foreach ($node->webform['components'] as $componentKey => $componentDetail) {
    if ($componentDetail['type'] == 'esign') {
      $esignComponentId = $componentKey;
    }
    if ($componentDetail['name'] == 'esign_custom_field') {
      $esignCustomFieldId = $componentKey;
    }
    if ($componentDetail['name'] == 'esign_activity_type_id') {
      $esignActivityTypeIdKey = $componentKey;
    }
  }
  if (empty($esignComponentId) || empty($esignCustomFieldId) || empty($esignActivityTypeIdKey)) {
    watchdog('webform_civicrm_esign', 'One of esign, esign_custom_field, esign_activity_type_id fields were not found');
    return;
  }

  // split the string on commas
  // $data[ 0 ] == "data:image/png;base64"
  // $data[ 1 ] == <actual base64 string>
  $data = explode(',', $submission->data[$esignComponentId]['esignature']);
  // we could add validation here with ensuring count( $data ) > 1
  $image = base64_decode($data[1]);

  $customfield = reset($submission->data[$esignCustomFieldId]);
  $activityTypeId = reset($submission->data[$esignActivityTypeIdKey]);

  if (array_key_exists($activityTypeId, $values['activity_id'])) {
    $activityId = $values['activity_id'][$activityTypeId];
  }

  // Create an attachment for a custom file field
  $attachmentParams = array(
    'field_name' => $customfield,
    'entity_id' => $activityId,
    'name' => 'signature.png',
    'mime_type' => 'image/png',
    'content' => $image,
  );
  civicrm_api3('Attachment', 'create', $attachmentParams);
  return;
}
